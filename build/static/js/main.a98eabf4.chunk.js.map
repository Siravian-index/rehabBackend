{"version":3,"sources":["components/Footer.jsx","components/LogoutButton.jsx","customHooks/useWindowSize.jsx","components/Navbar.jsx","context/SellsContext.jsx","context/ProductsContext.jsx","components/Sells/EditSell.jsx","components/Sells/NewSell.jsx","components/Sells/SingleSell.jsx","components/Sells/SearchBar.jsx","components/Sells/Sells.jsx","components/Store/EditProduct.jsx","components/Store/NewProduct.jsx","components/Store/SingleProduct.jsx","components/Store/SearchBarProducts.jsx","components/Store/Store.jsx","components/LoginButton.jsx","components/WelcomePage.jsx","App.js","index.js"],"names":["Footer","className","href","target","rel","LogoutButton","logout","useAuth0","onClick","returnTo","window","location","origin","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","Navbar","user","size","to","src","picture","alt","name","SellsContext","createContext","SellsContextProvider","children","sellList","setSellList","clientName","clientID","totalValue","sellerName","products","productName","productPrice","productAmount","newSell","setNewSell","_id","updatedSell","setUpdatedSell","getAllSells","a","fetch","res","json","sells","data","getOneSellById","sell","createSell","newSellObj","method","body","JSON","stringify","headers","clearForm","editSellById","updatedObj","product","formValues","setFormValues","delimiter","total","setTotal","updateNewSellState","arr","reduce","prev","obj","split","price","push","updateSetUpdatedSell","Provider","value","removeSellById","filter","handleChange","i","e","newFormValues","addFormFields","removeFormFields","splice","getTotal","Number","ProductsContext","ProductsContextProvider","setProducts","description","status","newlyCreatedProduct","setNewlyCreatedProduct","updatedProduct","setUpdatedProduct","getAllProducts","getOneProductById","createProduct","newProductObj","editProductById","removeProductById","EditSell","updated","setUpdated","useContext","id","useParams","isMounted","setTimeout","onSubmit","event","preventDefault","htmlFor","required","type","placeholder","onChange","map","element","index","defaultValue","min","max","NewSell","action","SingleSell","item","SearchBar","searchValue","setSearchValue","selectValue","setSelectValue","filteredSells","toLowerCase","includes","Sells","setAction","EditProduct","NewProduct","SingleProduct","filteredProducts","Store","SearchBarProducts","LoginButton","loginWithRedirect","WelcomePage","App","isAuthenticated","isLoading","exact","path","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.a98eabf4.chunk.js","sourcesContent":["const Footer = () => {\n  const love = '<3';\n  return (\n    <footer className='fixed bottom-0 right-0 left-0'>\n      <p className='text-xs text-center'>\n        Made with {love} by{' '}\n        <a\n          href='https://github.com/Siravian-index'\n          target='_blank'\n          rel='noreferrer'\n          className='hover:text-blue-700'\n        >\n          David Esteban\n        </a>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <button\n      className='bg-transparent border border-red-500 text-red-500 hover:bg-red-500 hover:text-white text-center py-1 px-2 rounded'\n      onClick={() => logout({ returnTo: window.location.origin })}\n    >\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import { useState, useEffect } from 'react';\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import { useAuth0 } from '@auth0/auth0-react';\nimport LogoutButton from './LogoutButton';\nimport { Link } from 'react-router-dom';\nimport useWindowSize from '../customHooks/useWindowSize';\n\nconst Navbar = () => {\n  // const { user, isAuthenticated, isLoading } = useAuth0();\n  const { user } = useAuth0();\n\n  let size = useWindowSize();\n\n  return (\n    <nav className=' md:w-10/12 m-auto flex justify-between items-center mt-1'>\n      <ul className='md:w-1/2 w-2/3 flex justify-evenly items-center'>\n        <li>\n          <Link to='/'>\n            <img\n              className='object-contain h-10 w-full'\n              src={user.picture}\n              alt={user.name}\n            />\n          </Link>\n        </li>\n        {size.width > 590 && <li>{user.name}</li>}\n        <li className='hover:text-blue-700'>\n          <Link className='' to='/sells'>\n            Sells\n          </Link>\n        </li>\n        <li className='hover:text-blue-700'>\n          <Link to='/store'>Store</Link>\n        </li>\n        <li className='hover:text-blue-700'>\n          <Link to='/users'>Users</Link>\n        </li>\n      </ul>\n      <div>\n        <LogoutButton />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { createContext, useState, useEffect } from 'react';\n\nexport const SellsContext = createContext(null);\n\nconst SellsContextProvider = ({ children }) => {\n  const [sellList, setSellList] = useState([]);\n  const [newSell, setNewSell] = useState({\n    clientName: '',\n    clientID: '',\n    totalValue: '',\n    sellerName: '',\n    products: [\n      {\n        productName: '',\n        productPrice: '',\n        productAmount: '',\n      },\n    ],\n  });\n\n  const [updatedSell, setUpdatedSell] = useState({\n    clientName: '',\n    clientID: '',\n    totalValue: '',\n    sellerName: '',\n    _id: '',\n    products: [\n      {\n        productName: '',\n        productPrice: '',\n        productAmount: '',\n      },\n    ],\n  });\n  // fetch all sells from db\n  const getAllSells = async () => {\n    const res = await fetch('http://localhost:8000/api/sells');\n    const sells = await res.json();\n    setSellList(sells.data);\n  };\n  // get one sell by id\n  const getOneSellById = async (_id) => {\n    const res = await fetch(`http://localhost:8000/api/sell/${_id}`);\n    const sell = await res.json();\n    setUpdatedSell(sell.data);\n  };\n\n  // place all the products in state\n  useEffect(() => {\n    getAllSells();\n  }, []);\n  // create product\n  const createSell = async (newSellObj) => {\n    await fetch('http://localhost:8000/api/sell', {\n      method: 'POST',\n      body: JSON.stringify(newSellObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n    clearForm();\n    getAllSells();\n  };\n  // remove product\n  const removeSellById = (_id) => {\n    fetch(`http://localhost:8000/api/sell/${_id}`, {\n      method: 'DELETE',\n    });\n    setSellList((prev) => prev.filter((obj) => obj._id !== _id));\n  };\n\n  // edit product\n  const editSellById = async (updatedObj) => {\n    await fetch(`http://localhost:8000/api/sell/`, {\n      method: 'PUT',\n      body: JSON.stringify(updatedObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n    getAllSells();\n  };\n\n  // -------------------------------------\n  // newSell Logic\n  const [formValues, setFormValues] = useState([\n    { product: '', productAmount: '' },\n  ]);\n  // clearForm\n  const clearForm = () => {\n    setFormValues([{ product: '', productAmount: '' }]);\n    setNewSell({\n      clientName: '',\n      clientID: '',\n      totalValue: '',\n      sellerName: '',\n      products: [\n        {\n          productName: '',\n          productPrice: '',\n          productAmount: '',\n        },\n      ],\n    });\n  };\n  const delimiter = ':>>';\n  const [total, setTotal] = useState('');\n  const handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  const addFormFields = () => {\n    setFormValues([...formValues, { product: '', productAmount: '' }]);\n  };\n\n  const removeFormFields = (i) => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  const getTotal = (arr) => {\n    return arr.reduce((prev, obj) => {\n      let [product, price] = obj.product.split(delimiter);\n      if (product && price) {\n        return prev + Number(price) * Number(obj.productAmount);\n      }\n      return prev;\n    }, 0);\n  };\n  // this functions is to set the obj state in the NewSell File\n  // DO NOT confuse it with the similar function to set the obj state\n  // on the EditSell\n  const updateNewSellState = async (sellerName, arr) => {\n    let products = arr.reduce((prev, obj) => {\n      let [product, price] = obj.product.split(delimiter);\n      if (product && price) {\n        prev.push({\n          productName: product,\n          productPrice: price,\n          productAmount: obj.productAmount,\n        });\n      }\n      return prev;\n    }, []);\n    await setNewSell({\n      ...newSell,\n      totalValue: total,\n      sellerName: sellerName,\n      products: products,\n    });\n  };\n\n  const updateSetUpdatedSell = async (sellerName, arr) => {\n    let products = arr.reduce((prev, obj) => {\n      let [product, price] = obj.product.split(delimiter);\n      if (product && price) {\n        prev.push({\n          productName: product,\n          productPrice: price,\n          productAmount: obj.productAmount,\n        });\n      }\n      return prev;\n    }, []);\n    setUpdatedSell({\n      ...updatedSell,\n      totalValue: total,\n      sellerName: sellerName,\n      products: products,\n    });\n  };\n  return (\n    <SellsContext.Provider\n      value={{\n        removeSellById,\n        editSellById,\n        newSell,\n        setNewSell,\n        sellList,\n        setSellList,\n        createSell,\n        updatedSell,\n        setUpdatedSell,\n        getOneSellById,\n        clearForm,\n        formValues,\n        setFormValues,\n        delimiter,\n        handleChange,\n        total,\n        setTotal,\n        addFormFields,\n        removeFormFields,\n        getTotal,\n        updateNewSellState,\n        updateSetUpdatedSell,\n      }}\n    >\n      {children}\n    </SellsContext.Provider>\n  );\n};\n\nexport default SellsContextProvider;\n","import { createContext, useEffect, useState } from 'react';\n\nexport const ProductsContext = createContext(null);\n\nconst ProductsContextProvider = ({ children }) => {\n  const [products, setProducts] = useState([]);\n  const [newlyCreatedProduct, setNewlyCreatedProduct] = useState({\n    productName: '',\n    description: '',\n    productPrice: '',\n    status: '',\n  });\n  const [updatedProduct, setUpdatedProduct] = useState({\n    productName: '',\n    description: '',\n    productPrice: '',\n    status: '',\n    _id: '',\n  });\n  // clear form\n  const clearForm = () => {\n    setNewlyCreatedProduct({\n      productName: '',\n      description: '',\n      productPrice: '',\n      status: '',\n    });\n  };\n\n  // fetch all products from db\n  const getAllProducts = async () => {\n    const res = await fetch('http://localhost:8000/api/products');\n    const products = await res.json();\n    setProducts(products.data);\n  };\n  // get one product by id\n  const getOneProductById = async (_id) => {\n    const res = await fetch(`http://localhost:8000/api/product/${_id}`);\n    const product = await res.json();\n    setUpdatedProduct(product.data);\n  };\n\n  // place all the products in state\n  useEffect(() => {\n    getAllProducts();\n  }, []);\n  // create product\n  const createProduct = async (newProductObj) => {\n    await fetch('http://localhost:8000/api/product', {\n      method: 'POST',\n      body: JSON.stringify(newProductObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n    getAllProducts();\n  };\n  // remove product\n  const removeProductById = (_id) => {\n    fetch(`http://localhost:8000/api/product/${_id}`, {\n      method: 'DELETE',\n    });\n    setProducts((prev) => prev.filter((obj) => obj._id !== _id));\n  };\n\n  // edit product\n  const editProductById = async (updatedObj) => {\n    await fetch(`http://localhost:8000/api/product/`, {\n      method: 'PUT',\n      body: JSON.stringify(updatedObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n    getAllProducts();\n  };\n  return (\n    <ProductsContext.Provider\n      value={{\n        products,\n        setProducts,\n        createProduct,\n        editProductById,\n        removeProductById,\n        newlyCreatedProduct,\n        setNewlyCreatedProduct,\n        getOneProductById,\n        clearForm,\n        updatedProduct,\n        setUpdatedProduct,\n      }}\n    >\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport default ProductsContextProvider;\n","import { useContext, useEffect, useState } from 'react';\nimport { SellsContext } from '../../context/SellsContext';\nimport { ProductsContext } from '../../context/ProductsContext';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { useParams } from 'react-router';\n\nconst EditSell = () => {\n  const [updated, setUpdated] = useState(false);\n\n  const {\n    formValues,\n    clearForm,\n    delimiter,\n    handleChange,\n    total,\n    setTotal,\n    addFormFields,\n    removeFormFields,\n    getTotal,\n    updatedSell,\n    setUpdatedSell,\n    updateSetUpdatedSell,\n    getOneSellById,\n    editSellById,\n  } = useContext(SellsContext);\n  const { products } = useContext(ProductsContext);\n  const { user } = useAuth0();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getOneSellById(id);\n  }, []);\n\n  useEffect(() => {\n    setTotal(getTotal(formValues));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formValues]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      updateSetUpdatedSell(user.name, formValues);\n    }\n    return () => {\n      isMounted = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [total, formValues]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setUpdated(false);\n    }, 3000);\n  }, [updated]);\n  const sellUpdatedSuccessfully = () => {\n    return <p>Sell updated Successfully! Return now.</p>;\n  };\n  return (\n    <div>\n      <div></div>\n      <h3 className='text-center my-5'>Edit Sell</h3>\n      <h3 className='text-center my-5'>Sell's id: {id}</h3>\n\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          editSellById(updatedSell);\n        }}\n        className='flex flex-col justify-center items-center gap-5'\n      >\n        <label htmlFor='client'>\n          <input\n            required\n            id='client'\n            type='text'\n            placeholder='Client Name'\n            value={updatedSell.clientName}\n            onChange={(e) => {\n              setUpdatedSell({\n                ...updatedSell,\n                clientName: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='client'>\n          <input\n            required\n            id='client'\n            type='number'\n            placeholder='Client ID'\n            value={updatedSell.clientID}\n            onChange={(e) => {\n              setUpdatedSell({\n                ...updatedSell,\n                clientID: e.target.value,\n              });\n            }}\n          />\n        </label>\n\n        {formValues.map((element, index) => (\n          <div className='flex justify-center items-center gap-x-5' key={index}>\n            <select\n              className=' bg-white border border-gray-400 hover:border-gray-500 px-2 py-1 pr-3 rounded shadow leading-tight focus:outline-none focus:shadow-outline'\n              id='product'\n              name='product'\n              onChange={(e) => handleChange(index, e)}\n            >\n              <option defaultValue value='noProduct'>\n                Select Product\n              </option>\n\n              {products.map((product, index) => (\n                <option\n                  key={index}\n                  value={`${product.productName}${delimiter}${product.productPrice}`}\n                >\n                  {product.productName}\n                </option>\n              ))}\n            </select>\n            <label>\n              <input\n                type='number'\n                min='1'\n                max='99'\n                name='productAmount'\n                placeholder='Amount'\n                required\n                value={element.productAmount}\n                onChange={(e) => handleChange(index, e)}\n              />\n            </label>\n            {index ? (\n              <button\n                type='button'\n                className=' bg-red-200 hover:bg-red-500 hover:text-white text-red-500 text-center py-1 px-2 rounded'\n                onClick={() => removeFormFields(index)}\n              >\n                -\n              </button>\n            ) : null}\n          </div>\n        ))}\n        <div className='button-section'>\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n            type='button'\n            onClick={() => addFormFields()}\n          >\n            Add\n          </button>\n        </div>\n        <div>\n          <p>Total: {total} </p>\n        </div>\n        <button\n          className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n          type='submit'\n          onClick={() => setUpdated(true)}\n        >\n          Submit\n        </button>\n      </form>\n      <div className='flex flex-col justify-center items-center mt-4'>\n        {updated && (\n          <div className='flex justify-center items-center'>\n            {sellUpdatedSuccessfully()}\n          </div>\n        )}\n        <button\n          className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n          onClick={() => clearForm()}\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditSell;\n","import { useContext, useEffect } from 'react';\nimport { SellsContext } from '../../context/SellsContext';\nimport { ProductsContext } from '../../context/ProductsContext';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst NewSell = () => {\n  // context\n  const {\n    newSell,\n    setNewSell,\n    createSell,\n    formValues,\n    clearForm,\n    delimiter,\n    handleChange,\n    total,\n    setTotal,\n    addFormFields,\n    removeFormFields,\n    getTotal,\n    updateNewSellState,\n  } = useContext(SellsContext);\n  const { products } = useContext(ProductsContext);\n  // oauth\n  const { user } = useAuth0();\n  // useEffect\n  useEffect(() => {\n    setTotal(getTotal(formValues));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formValues]);\n\n  useEffect(() => {\n    updateNewSellState(user.name, formValues);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [total, formValues, user.name]);\n  // helper functions\n\n  return (\n    <div>\n      <form\n        action='POST'\n        onSubmit={(event) => {\n          event.preventDefault();\n          createSell(newSell);\n        }}\n        className='flex flex-col justify-center items-center gap-5'\n      >\n        <label htmlFor='client'>\n          <input\n            className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n            required\n            id='client'\n            type='text'\n            placeholder='Client Name'\n            value={newSell.clientName}\n            onChange={(e) => {\n              setNewSell({\n                ...newSell,\n                clientName: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='client'>\n          <input\n            className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n            required\n            id='client'\n            type='number'\n            placeholder='Client ID'\n            value={newSell.clientID}\n            onChange={(e) => {\n              setNewSell({\n                ...newSell,\n                clientID: e.target.value,\n              });\n            }}\n          />\n        </label>\n        {formValues.map((element, index) => (\n          <div className='flex justify-center items-center gap-x-5' key={index}>\n            <select\n              className=' bg-white border border-gray-400 hover:border-gray-500 px-2 py-1 pr-3 rounded shadow leading-tight focus:outline-none focus:shadow-outline'\n              id='product'\n              name='product'\n              onChange={(e) => handleChange(index, e)}\n            >\n              <option defaultValue value='noProduct'>\n                Select Product\n              </option>\n              {products.map((product, index) => (\n                <option\n                  key={index}\n                  value={`${product.productName}${delimiter}${product.productPrice}`}\n                >\n                  {product.productName}\n                </option>\n              ))}\n            </select>\n            <label>\n              <input\n                className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                type='number'\n                min='1'\n                max='99'\n                name='productAmount'\n                placeholder='Amount'\n                required\n                value={element.productAmount}\n                onChange={(e) => handleChange(index, e)}\n              />\n            </label>\n            {index ? (\n              <button\n                type='button'\n                className=' bg-red-200 hover:bg-red-500 hover:text-white text-red-500 text-center py-1 px-2 rounded'\n                onClick={() => removeFormFields(index)}\n              >\n                -\n              </button>\n            ) : null}\n          </div>\n        ))}\n        <div className='button-section'>\n          <button\n            className='bg-transparent border border-green-500 text-green-500 hover:bg-green-500 hover:text-white text-center py-2 px-4 rounded'\n            type='button'\n            onClick={() => addFormFields()}\n          >\n            Add\n          </button>\n        </div>\n        <div>\n          <p>Total: {total} </p>\n        </div>\n        {total > 0 && (\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n            type='submit'\n          >\n            Submit\n          </button>\n        )}\n      </form>\n      <div className='flex justify-center items-center mt-4'>\n        <button\n          className='bg-transparent border border-black text-black hover:bg-black hover:text-white text-center py-2 px-4 rounded'\n          onClick={() => clearForm()}\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewSell;\n","import { SellsContext } from '../../context/SellsContext';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SingleSell = ({ item }) => {\n  const { removeSellById } = useContext(SellsContext);\n\n  return (\n    <li className='text-left my-5 md:p-4'>\n      <div>\n        <span className='font-bold'>Seller:</span> {item.sellerName}\n      </div>\n      <div>\n        <span className='font-bold'>Client:</span> {item.clientName}\n      </div>\n      <div>\n        <span className='font-bold'>Client ID:</span> {item.clientID}\n      </div>\n      <div>\n        <span className='font-bold'>Total:</span> {item.totalValue}\n      </div>\n      <div>\n        <span className='font-bold'>Details: </span>\n        {item.products.map((product, index) => (\n          <div className='ml-4 my-1 pb-1 border-b' key={index}>\n            <p className='font-bold'>\n              Product:\n              <span className='font-normal'>{product.productName}</span>\n            </p>\n            <p className='font-bold'>\n              Price: <span className='font-normal'>{product.productPrice}</span>\n            </p>\n            <p className='font-bold'>\n              Amount:\n              <span className='font-normal'>{product.productAmount}</span>\n            </p>\n          </div>\n        ))}\n      </div>\n      <div className='flex items-center justify-center gap-4 mt-4'>\n        <button\n          className='bg-transparent border border-red-500 text-red-500 hover:bg-red-500 hover:text-white text-center py-1 px-2 rounded'\n          onClick={() => {\n            removeSellById(item._id);\n          }}\n        >\n          Delete\n        </button>\n        <Link to={`/edit/sell/${item._id}`}>\n          <button className='bg-transparent border border-gray-500 text-gray-500 hover:bg-gray-500 hover:text-white text-center py-1 px-2 rounded'>\n            Edit\n          </button>\n        </Link>\n      </div>\n    </li>\n  );\n};\n\nexport default SingleSell;\n","import { useState, useContext } from 'react';\nimport { SellsContext } from '../../context/SellsContext';\nimport SingleSell from './SingleSell';\n\nconst SearchBar = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [selectValue, setSelectValue] = useState('clientName');\n  // context\n  const { sellList } = useContext(SellsContext);\n\n  // filter sells\n  const filteredSells = sellList.filter((sell) => {\n    return sell[selectValue].toLowerCase().includes(searchValue.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className='flex flex-col items-center justify-center gap-1'>\n        <input\n          className='shadow appearance-none border rounded mb-2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n          type='text'\n          placeholder='Search by:'\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <select\n          className=' bg-white border border-gray-400 hover:border-gray-500 px-2 py-1 pr-3 rounded shadow leading-tight focus:outline-none focus:shadow-outline'\n          name='search'\n          id='searchSells'\n          onChange={(e) => {\n            setSelectValue(e.target.value);\n          }}\n        >\n          <option defaultValue value='clientName'>\n            Client's Name\n          </option>\n          <option value='clientID'>Client's Id</option>\n          <option value='_id'>Product's Id</option>\n        </select>\n      </div>\n      <ul className='md:w-11/12 md:flex md:flex-wrap md:gap-4 md:justify-around  mx-auto my-3 border px-4'>\n        {filteredSells.map((item) => {\n          return <SingleSell item={item} key={item._id}></SingleSell>;\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useState } from 'react';\nimport NewSell from './NewSell';\nimport SearchBar from './SearchBar';\n\nconst Sells = () => {\n  const [action, setAction] = useState('');\n  return (\n    <div>\n      <div className='flex flex-col justify-center items-center gap-4 my-5'>\n        <h3>What do you need to do?</h3>\n        <div className='mb-5'>\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center mx-3 py-2 px-4 rounded'\n            onClick={() => {\n              setAction('add');\n            }}\n          >\n            New sell\n          </button>\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n            onClick={() => {\n              setAction('list');\n            }}\n          >\n            See List\n          </button>\n        </div>\n      </div>\n\n      {action === 'add' && <NewSell />}\n      {action === 'list' && <SearchBar />}\n    </div>\n  );\n};\n\nexport default Sells;\n","import { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { ProductsContext } from '../../context/ProductsContext';\n\nconst EditProduct = () => {\n  const [updated, setUpdated] = useState(false);\n  const { id } = useParams();\n  const {\n    editProductById,\n    updatedProduct,\n    setUpdatedProduct,\n    clearForm,\n    getOneProductById,\n  } = useContext(ProductsContext);\n\n  useEffect(() => {\n    // get the product from the db and applies\n    // setUpdatedProduct on that obj\n    // which puts all the product info into updatedProduct\n    getOneProductById(id);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setUpdated(false);\n    }, 3000);\n  }, [updated]);\n  const productUpdatedSuccessfully = () => {\n    return <p>Product updated Successfully! Return now.</p>;\n  };\n\n  return (\n    <div>\n      <h3 className='text-center my-5'>Edit product</h3>\n      <h3 className='text-center my-5'>Product's id: {id}</h3>\n\n      <form\n        action=''\n        onSubmit={(event) => {\n          event.preventDefault();\n          editProductById(updatedProduct);\n          clearForm();\n        }}\n        className='flex flex-col justify-center items-center gap-5'\n      >\n        <label htmlFor='productName'>\n          <input\n            required\n            id='productName'\n            type='text'\n            placeholder='Product Name'\n            value={updatedProduct.productName}\n            onChange={(e) => {\n              setUpdatedProduct({\n                ...updatedProduct,\n                productName: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='description'>\n          <input\n            type='text'\n            required\n            id='description'\n            placeholder='Product description'\n            value={updatedProduct.description}\n            onChange={(e) => {\n              setUpdatedProduct({\n                ...updatedProduct,\n                description: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='productPrice'>\n          <input\n            required\n            id='productPrice'\n            type='text'\n            placeholder='Product Price'\n            value={updatedProduct.productPrice}\n            onChange={(e) => {\n              setUpdatedProduct({\n                ...updatedProduct,\n                productPrice: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='status'>\n          <input\n            required\n            id='status'\n            type='text'\n            placeholder='Status'\n            value={updatedProduct.status}\n            onChange={(e) => {\n              setUpdatedProduct({\n                ...updatedProduct,\n                status: e.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <button\n          className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n          type='submit'\n          onClick={() => setUpdated(true)}\n        >\n          Add\n        </button>\n      </form>\n      <div className='flex justify-center items-center my-5'>\n        <Link to='/store'>\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n            type='submit'\n          >\n            Go back\n          </button>\n        </Link>\n      </div>\n      {updated && (\n        <div className='flex justify-center items-center'>\n          {productUpdatedSuccessfully()}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditProduct;\n","import { useContext } from 'react';\nimport { ProductsContext } from '../../context/ProductsContext';\n\nconst NewProduct = () => {\n  const {\n    createProduct,\n    newlyCreatedProduct,\n    setNewlyCreatedProduct,\n    clearForm,\n  } = useContext(ProductsContext);\n\n  return (\n    <div>\n      <form\n        action=''\n        onSubmit={(event) => {\n          event.preventDefault();\n          createProduct(newlyCreatedProduct);\n          clearForm();\n        }}\n        className='flex flex-col justify-center items-center gap-5'\n      >\n        <label htmlFor='productName'>\n          <input\n            required\n            className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n            id='productName'\n            type='text'\n            placeholder='Product Name'\n            value={newlyCreatedProduct.productName}\n            onChange={(e) => {\n              setNewlyCreatedProduct({\n                ...newlyCreatedProduct,\n                productName: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='description'>\n          <input\n            type='text'\n            required\n            className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n            id='description'\n            placeholder='Product description'\n            value={newlyCreatedProduct.description}\n            onChange={(e) => {\n              setNewlyCreatedProduct({\n                ...newlyCreatedProduct,\n                description: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='productPrice'>\n          <input\n            required\n            className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n            id='productPrice'\n            type='text'\n            placeholder='Product Price'\n            value={newlyCreatedProduct.productPrice}\n            onChange={(e) => {\n              setNewlyCreatedProduct({\n                ...newlyCreatedProduct,\n                productPrice: e.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor='status'>\n          <input\n            required\n            className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n            id='status'\n            type='text'\n            placeholder='Status'\n            value={newlyCreatedProduct.status}\n            onChange={(e) => {\n              setNewlyCreatedProduct({\n                ...newlyCreatedProduct,\n                status: e.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <button\n          className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n          type='submit'\n        >\n          Submit1\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewProduct;\n","import { useContext } from 'react';\nimport { ProductsContext } from '../../context/ProductsContext';\nimport { Link } from 'react-router-dom';\n\nconst SingleProduct = ({ item }) => {\n  const { removeProductById } = useContext(ProductsContext);\n\n  return (\n    <li className='text-left my-5 md:p-4'>\n      <div>\n        <span className='font-bold'>Product Name:</span> {item.productName}\n      </div>\n      <div>\n        <span className='font-bold'>Product Description:</span>{' '}\n        {item.description}\n      </div>\n      <div>\n        <span className='font-bold'>Status:</span> {item.status}\n      </div>\n      <div>\n        <span className='font-bold'>Price:</span> {item.productPrice}\n      </div>\n      <div>\n        <span className='font-bold'>id:</span> {item._id}\n      </div>\n      <div className='flex items-center justify-center gap-4 mt-4'>\n        <button\n          className='bg-transparent border border-red-500 text-red-500 hover:bg-red-500 hover:text-white text-center py-1 px-2 rounded'\n          onClick={() => {\n            removeProductById(item._id);\n          }}\n        >\n          Delete\n        </button>\n        <Link to={`/edit/product/${item._id}`}>\n          <button className='bg-transparent border border-gray-500 text-gray-500 hover:bg-gray-500 hover:text-white text-center py-1 px-2 rounded'>\n            Edit\n          </button>\n        </Link>\n      </div>\n    </li>\n  );\n};\n\nexport default SingleProduct;\n","import { useState, useContext } from 'react';\nimport { ProductsContext } from '../../context/ProductsContext';\nimport SingleProduct from './SingleProduct';\n\nconst SearchBar = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [selectValue, setSelectValue] = useState('description');\n  // context\n  const { products } = useContext(ProductsContext);\n\n  const filteredProducts = products.filter((product) => {\n    return product[selectValue]\n      .toLowerCase()\n      .includes(searchValue.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className='flex flex-col items-center justify-center gap-1'>\n        <input\n          className='shadow appearance-none border rounded mb-2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n          type='text'\n          placeholder='Search by:'\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <select\n          className=' bg-white border border-gray-400 hover:border-gray-500 px-2 py-1 pr-3 rounded shadow leading-tight focus:outline-none focus:shadow-outline'\n          name='search'\n          id='searchSells'\n          onChange={(e) => {\n            setSelectValue(e.target.value);\n          }}\n        >\n          <option defaultValue value='description'>\n            Product's Description\n          </option>\n          <option value='productName'>Product's Name</option>\n          <option value='_id'>Product's Id</option>\n        </select>\n      </div>\n      <ul className='md:w-11/12 md:flex md:flex-wrap md:gap-4 md:justify-around mx-auto my-3 border px-4'>\n        {filteredProducts.map((item) => {\n          return <SingleProduct item={item} key={item._id} />;\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useState } from 'react';\nimport NewProduct from './NewProduct';\nimport SearchBarProducts from './SearchBarProducts';\n\nconst Store = () => {\n  const [action, setAction] = useState('');\n\n  return (\n    <div>\n      <div className='flex flex-col justify-center items-center gap-4 my-5'>\n        <h3>What do you need to do?</h3>\n        <div className='mb-5'>\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center mx-3 py-2 px-4 rounded'\n            onClick={() => {\n              setAction('add');\n            }}\n          >\n            New Product\n          </button>\n          <button\n            className='bg-black hover:bg-gray-900 text-white text-center py-2 px-4 rounded'\n            onClick={() => {\n              setAction('list');\n            }}\n          >\n            See List\n          </button>\n        </div>\n      </div>\n      {action === 'add' && <NewProduct />}\n      {action === 'list' && <SearchBarProducts />}\n    </div>\n  );\n};\n\nexport default Store;\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <button\n      className='bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded'\n      onClick={() => loginWithRedirect()}\n    >\n      Log In\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import LoginButton from './LoginButton';\n\nconst WelcomePage = () => {\n  return (\n    <div className='w-full m-auto my-10 p-10 text-center border'>\n      <h3 className='my-5 text-3xl'>Welcome to the store!</h3>\n      <p className='my-5'>\n        Please Login using a <span className='underline'>Google</span> account{' '}\n      </p>\n      <div className='my-5'>\n        <LoginButton />\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomePage;\n","import { useAuth0 } from '@auth0/auth0-react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// components\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport EditSell from './components/Sells/EditSell';\nimport Sells from './components/Sells/Sells';\nimport EditProduct from './components/Store/EditProduct';\nimport Store from './components/Store/Store';\nimport WelcomePage from './components/WelcomePage';\n// context\nimport ProductsContextProvider from './context/ProductsContext';\nimport SellsContextProvider from './context/SellsContext';\n\nconst App = () => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <div className='text-center'>Loading ...</div>;\n  }\n\n  if (!isAuthenticated) {\n    return <WelcomePage />;\n  } else {\n    return (\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path='/store'>\n            <ProductsContextProvider>\n              <Store />\n            </ProductsContextProvider>\n          </Route>\n          <Route exact path='/edit/product/:id'>\n            <ProductsContextProvider>\n              <EditProduct />\n            </ProductsContextProvider>\n          </Route>\n          <Route exact path='/sells'>\n            <ProductsContextProvider>\n              <SellsContextProvider>\n                <Sells />\n              </SellsContextProvider>\n            </ProductsContextProvider>\n          </Route>\n          <Route exact path='/edit/sell/:id'>\n            <ProductsContextProvider>\n              <SellsContextProvider>\n                <EditSell />\n              </SellsContextProvider>\n            </ProductsContextProvider>\n          </Route>\n          <Route exact path='/users'></Route>\n          <Route exact path='/'>\n            <div>{/* action boxes */}</div>\n            <Footer />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nReactDOM.render(\n  <Auth0Provider\n    domain='dev-2rv8c3jm.us.auth0.com'\n    clientId='SVkXn8UGq2ma8B16C4MihKOtDp8EGrJX'\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}